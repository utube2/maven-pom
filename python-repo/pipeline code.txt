DOCKER HUB JENKINS  -  jenkins to dockerhub to running container 
https://www.coachdevops.com/2020/05/automate-docker-builds-using-jenkins.html
https://www.youtube.com/watch?v=UTziA84ynvo
** https://medium.com/@gustavo.guss/jenkins-building-docker-image-and-sending-to-registry-64b84ea45ee9
=========================================
pipeline {
    agent any 
    environment {
        registry = 'utube/pythonapp'  //"your_docker_user_id/mypythonapp"
        registryCredential = 'docker-hub' // credential id - add docker username , password n copy the id
        dockerImage = ''  // variable to hold docker build image information
        
    }
    stages {
        stage ('Checkout') {
            steps {
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/utube2/jenkins-dockerhub.git']])
            }
        }
        // docker build -t <tag> .
        stage ('Build Docker image' ) {
            steps {
                script {   // refer for variables - /pipeline-syntax/globals
                    
                      dockerImage = docker.build registry + ":${BUILD_ID}"   // here registry's value is used as a tag ; docker build -t ${registry} .
                                     //docker.build registry + ":$BUILD_NUMBER"  https://medium.com/@gustavo.guss/jenkins-building-docker-image-and-sending-to-registry-64b84ea45ee9
                                    // and we are storing image or build info in variable dockerHub , later we use this to push image  
                                    // build(image[, args])
                                   // Runs docker build to create and tag the specified image from a Dockerfile in the current directory. Additional args may be added, such as '-f Dockerfile.other --pull --build-arg
                                   
                     sh "echo ${BUILD_ID}"
                     sh "echo ${BUILD_NUMBER}"
                      
                }
            }
            
        }
        
        stage ('Upload to Dockerhub') {
            steps {
                script {
                     // withRegistry(url[, credentialsId]) {â€¦}
                     // Specifies a registry URL such as https://docker.mycorp.com/, plus an optional credentials ID to connect to it.
                         docker.withRegistry( '', registryCredential ) {
                           dockerImage.push()
                     }
                    
                }
            }
            
        }
        // Stopping Docker containers for cleaner Docker run
        stage('docker stop container') {
             steps {
               sh 'docker ps -f name=mypythonappContainer -q | xargs --no-run-if-empty docker container stop'
               sh 'docker container ls -a -fname=mypythonappContainer -q | xargs -r docker container rm'
             }
        }
    
    
    // Running Docker container, make sure port 8096 is opened in 
       stage('Docker Run') {
            steps{
               script {
                  dockerImage.run("-p 8096:5000 --rm --name mypythonappContainer")
               }
           }
    
        }
    }

}
